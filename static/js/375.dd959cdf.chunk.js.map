{"version":3,"file":"static/js/375.dd959cdf.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","service/moviesAPI.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Poster = styled.img`\nwidth: 50%;\n`\nexport const Text = styled.span`\nfont-weight: 700;\n`\nexport const Backward = styled(Link)`\npadding: 16px 0px;\nborder-radius: 4px;\ntext-decoration: none;\nfont-weight: 500;\ncolor: blue; \n`\nexport const Container = styled.div`\nmax-width: 960px;\nmargin: 0 auto;\npadding: 0 16px;\n`\nexport const List = styled.ul`\nlist-style: none;\npadding: 16px 0px;\n`\nexport const Item = styled.li`\ntext-decoration: none;\ncolor: blue;\n`","import { useParams, Link, Outlet } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Suspense } from \"react\";\nimport { getMovieById } from \"../../service/moviesAPI\";\nimport { Poster, Text, Backward, Container, List, Item } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n    const [title, setTitle] = useState('');\n    const [date, setDate] = useState('');\n    const [overview, setOverview] = useState('');\n    const [poster, setPoster] = useState('');\n    const [genres, setGenres] = useState([]);\n    const [score, setScore] = useState('');\n    const { movieId } = useParams();\n    const location = useLocation();\n    const from = location.state?.from || \"/\";\n\n\nuseEffect(() => {\ntry { getMovieById(movieId).then(response => {\n    setTitle(response.title)\n    setDate(response.release_date)\n    setOverview(response.overview)\n    if (response.poster_path === null) {\n        setPoster(`https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg`)\n    } else {\n        setPoster(`https://image.tmdb.org/t/p/original/${response.poster_path}`)\n    }\n    setGenres(response.genres)\n    setScore(response.vote_average)\n    }) \n    } catch (error) {\n        console.log(error);\n    }\n}, [movieId]);\n\nreturn (\n<Container>\n    <Backward to={from}>Back to movies</Backward>\n    <h2>{title}</h2>\n    <p><Text>Date:</Text> {date}</p>  \n    <p><Text>User Score:</Text> {score}</p>\n    <p><Text>Overview:</Text> {overview}</p>     \n    <Poster src={poster} alt=\"poster\"/>\n    <p><Text>Genres:</Text> {genres.map(genre => {\n        return genre.name;\n    }).join(\", \")}</p> \n\n    <List>\n        <Item>\n            <Link to=\"cast\" state={{from}}>Read about a cast</Link>\n        </Item>\n        <Item>\n            <Link to=\"reviews\" state={{from}}>Get to know the reviews</Link>\n        </Item>\n    </List>\n    <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n    </Suspense>\n</Container>\n);\n};\n\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '48201fa6f91a1e64f8af04954a183bb3';\n\naxios.defaults.baseURL = URL;\n\nexport const getTrends = async (pageNumber) => {\nconst response = await axios(`trending/movie/day`, {\nparams: {\n    page: pageNumber,\n    api_key: KEY,\n},\n});\n\nreturn response.data.results;\n};\n\nexport const getMovieById = async (movieId) => {\nconst response = await axios(`movie/${movieId}`, {\nparams: {\n    query: movieId,\n    api_key: KEY,\n},\n});\n\nreturn response.data;\n};\n\nexport const getMovieByKeyword = async (keyword, pageNumber) => {\n    const response = await axios(`search/movie`, {\n    params: {\n        query: keyword,\n        page: pageNumber,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data;\n    };\n\nexport const getCreditsById = async (movieId) => {\n    const response = await axios(`movie/${movieId}/credits`, {\n    params: {\n        query: movieId,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data.cast;\n    };\n\nexport const getReviewById = async (movieId) => {\n    const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n        query: movieId,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data.results;\n    };"],"names":["Poster","styled","Text","Backward","Link","Container","List","Item","useState","title","setTitle","date","setDate","overview","setOverview","poster","setPoster","genres","setGenres","score","setScore","movieId","useParams","from","useLocation","state","useEffect","getMovieById","then","response","release_date","poster_path","vote_average","error","console","log","to","src","alt","map","genre","name","join","Suspense","fallback","KEY","axios","getTrends","pageNumber","params","page","api_key","data","results","query","getMovieByKeyword","keyword","getCreditsById","cast","getReviewById"],"sourceRoot":""}