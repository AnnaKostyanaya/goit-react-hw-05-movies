{"version":3,"file":"static/js/779.7711b89c.chunk.js","mappings":"gQAEaA,EAAQC,EAAAA,GAAAA,IAAH,iHAOLC,EAAOD,EAAAA,GAAAA,EAAH,kHAOJE,EAAOF,EAAAA,GAAAA,EAAH,gFAMJG,EAAOH,EAAAA,GAAAA,GAAH,iHAQJI,EAAOJ,EAAAA,GAAAA,IAAH,6H,SCgBjB,EAzCgB,WACZ,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAmBJ,OAjBAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAcN,GAASO,MAAK,SAAAC,GAC5B,IAAMC,EAAcD,EAASE,KAAI,YAA4C,IAA1CC,EAAyC,EAAzCA,eAAgBC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WACxD,OAAmC,OAA/BF,EAAeG,aAAyBH,EAAeG,YAAaC,SAAS,WACzEJ,EAAeG,YAAc,sEACtB,CAACH,eAAAA,EAAgBC,QAAAA,EAASC,WAAAA,KAGrCF,EAAeG,YAAf,8CAAoEH,EAAeG,aAC5E,CAACH,eAAAA,EAAgBC,QAAAA,EAASC,WAAAA,GAExC,IAEDT,GAAU,OAAIK,GACb,GACJ,GAAE,CAACT,KAGJ,iCACI,oCACA,wBACKG,EAAOO,KAAI,SAACP,GAAD,OACZ,UAACL,EAAD,YACI,UAACC,EAAD,YACI,SAACL,EAAD,CAAOsB,IAAKb,EAAOQ,eAAeG,YAAaG,IAAI,UACnD,SAACrB,EAAD,UAAOO,EAAOQ,eAAeO,eAEjC,UAACrB,EAAD,WAAOM,EAAOS,QAAd,KAAuB,0CAAmB,IAAIO,KAAKhB,EAAOU,YAAaO,uBALhEjB,EAAOU,WADN,MAUI,IAAlBV,EAAOkB,SACT,mDAGH,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Photo = styled.img`\nmargin-top: 20px;\nmargin-right: 5px;\nwidth: 50px;\nheight: 50px;\nborder-radius: 50%;\n`\nexport const Name = styled.p`\ndisplay: block;\nwidth: 150px;\nmargin-right: 5px;\ntext-align: center;\noverflow: auto;\n`\nexport const Text = styled.p`\ndisplay: block;\nmargin-right: 5px;\nmax-width: 800px;\n`\n\nexport const Item = styled.li`\ndisplay: flex;\nalign-items: flex-start;\nmargin: 10px;\npadding: 0;\nlist-style: none;\n`\n\nexport const User = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nalign-items: flex-start;\njustify-content: center;\nwidth: 150px;\n`","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviewById } from \"../../service/moviesAPI\";\nimport { Photo, Item, User, Name, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [review, setReview] = useState([]);\n\nuseEffect(() => {\n    getReviewById(movieId).then(response => {\n    const movieReview = response.map(({author_details, content, created_at}) => {\n        if (author_details.avatar_path === null || (author_details.avatar_path).includes(\"/https\")) {\n                author_details.avatar_path = \"https://upload.wikimedia.org/wikipedia/commons/1/12/User_icon_2.svg\";\n                return {author_details, content, created_at};\n            } \n        else {\n            author_details.avatar_path = `https://image.tmdb.org/t/p/original/${author_details.avatar_path}`;\n            return {author_details, content, created_at};\n        }\n    }\n    )\n    setReview([...movieReview]);\n    }) \n}, [movieId]);\n\nreturn (\n<>\n    <h2>Review</h2>\n    <ul>\n        {review.map((review) => (\n        <Item key={review.created_at}>\n            <User>\n                <Photo src={review.author_details.avatar_path} alt=\"user\"/>\n                <Name>{review.author_details.username}</Name>\n            </User>\n            <Text>{review.content} <span>Create at: {(new Date(review.created_at)).toDateString()}</span></Text>\n        </Item>\n        ))}\n    </ul>\n    {(review.length === 0) &&\n    <p>There are no reviews.</p>}\n</>\n);\n};\n\nexport default Reviews;"],"names":["Photo","styled","Name","Text","Item","User","movieId","useParams","useState","review","setReview","useEffect","getReviewById","then","response","movieReview","map","author_details","content","created_at","avatar_path","includes","src","alt","username","Date","toDateString","length"],"sourceRoot":""}