{"version":3,"file":"static/js/387.5df35df4.chunk.js","mappings":"oRAEaA,EAAOC,EAAAA,GAAAA,GAAH,6HAQJC,EAAQD,EAAAA,GAAAA,IAAH,uDAILE,EAAOF,EAAAA,GAAAA,GAAH,0DAKJG,EAAOH,EAAAA,GAAAA,EAAH,yHAOJI,EAAYJ,EAAAA,GAAAA,EAAH,yHAOTK,EAAaL,EAAAA,GAAAA,EAAH,yHAQVM,EAAUN,EAAAA,GAAAA,KAAH,kG,mBCYpB,EA7Ca,WACT,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAsBJ,OApBAC,EAAAA,EAAAA,YAAU,WACND,EAAU,WACV,KAAME,EAAAA,EAAAA,IAAeR,GAASS,MAAM,SAAAC,GAC5B,IAAMC,EAAYD,EAASE,KAAI,YAAkD,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aAC1D,MAAO,CACHC,QAAQC,EAAAA,EAAAA,MACRL,UAAyB,KAAdA,EAAmB,iBAAmBA,EACjDC,KAAe,KAATA,EAAc,iBAAmBA,EACvCC,WAA2B,KAAfA,EAAoB,iBAAmBA,EACnDC,aAAgC,OAAjBA,GAA0C,KAAjBA,EAA1B,2HAAuKA,GAE5L,IACDZ,GAAQ,OAAIO,IACZL,EAAU,KACb,GAGJ,CAFC,MAAOa,GACLb,EAAU,QACb,CACJ,GAAE,CAACN,KAGJ,iCACA,kCACI,SAACR,EAAD,UACKW,EAAKS,KAAI,SAACQ,GAAD,OACV,UAACzB,EAAD,YACI,UAACE,EAAD,YAAW,SAACE,EAAD,yBAA8BqB,EAAMP,cAC/C,UAACjB,EAAD,YAAM,SAACG,EAAD,oBAAyBqB,EAAMN,SACrC,UAAChB,EAAD,YAAY,SAACC,EAAD,0BAA+BqB,EAAML,eACjD,SAACrB,EAAD,CAAO2B,IAAKD,EAAMJ,aAAcM,IAAI,YAJ7BF,EAAMH,OADP,MASI,IAAhBd,EAAKoB,SACH,0DACQ,YAAXlB,IAAyB,SAACmB,EAAA,EAAD,MAG7B,C,6CC9BD,IAnBe,WACX,OACA,SAAC,KAAD,CACAC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CACVC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEhBC,aAAa,GACbC,SAAS,GAGZ,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    margin: 10px;\n    padding: 0;\n    list-style: none;\n`\n\nexport const Photo = styled.img`\nwidth: 170px;\nheigth: 255px;\n`\nexport const Item = styled.li`\nmax-width: 200px;\nmargin: 10px;\n`\n\nexport const Name = styled.p`\nmax-width: 180px;\nfont-size: 14px;\ntext-decoration: none;\ncolor: black;\nmargin-bottom: 5px;\n`\nexport const Character = styled.p`\nmax-width: 180px;\nfont-size: 14px;\ntext-decoration: none;\ncolor: black;\nmargin-bottom: 5px;\n`\nexport const Popularity = styled.p`\nmax-width: 180px;\nfont-size: 14px;\ntext-decoration: none;\ncolor: black;\nmargin-bottom: 5px;\n`\n\nexport const Caption = styled.span`\ndisplay: block;\nfont-size: 16px;\ntext-decoration: none;\ncolor: black;\n`\n\n\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport { getCreditsById } from \"../../service/moviesAPI\";\nimport { List, Photo, Item, Name, Character, Popularity, Caption } from './Cast.styled';\nimport { nanoid } from 'nanoid'\n\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n    const [status, setStatus] = useState(\"\");\n\nuseEffect(() => {\n    setStatus(\"LOADING\");\n    try { getCreditsById(movieId).then( response => {\n            const movieCast = response.map(({character, name, popularity, profile_path}) => {\n                return {\n                    realId: nanoid(),\n                    character: character === \"\" ? \"No information\" : character,\n                    name: name === \"\" ? \"No information\" : name,\n                    popularity: popularity === \"\" ? \"No information\" : popularity,\n                    profile_path: (profile_path === null || profile_path === \"\") ? `https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg` : `https://image.tmdb.org/t/p/original/${profile_path}`\n                }\n            })\n            setCast([...movieCast]);\n            setStatus(\"OK\");\n        })  \n    } catch (error) {\n        setStatus(\"ERROR\");\n    }\n}, [movieId]);\n\nreturn (\n<>\n<h2>Cast</h2>\n    <List>\n        {cast.map((actor) => (\n        <Item key={actor.realId}>\n            <Character><Caption>Character:</Caption>{actor.character}</Character>\n            <Name><Caption>Name:</Caption>{actor.name}</Name>\n            <Popularity><Caption>Popularity:</Caption>{actor.popularity}</Popularity>\n            <Photo src={actor.profile_path} alt=\"actor\"/>\n        </Item>\n        ))}\n    </List>\n    {(cast.length === 0) &&\n        <p>No information about the cast.</p>}\n    {status === \"LOADING\" &&  <Loader />}\n</>\n);\n};\n\nexport default Cast;","import { Grid } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n    <Grid\n    height=\"80\"\n    width=\"80\"\n    color=\"#4fa94d\"\n    ariaLabel=\"grid-loading\"\n    radius=\"12.5\"\n    wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }}\n    wrapperClass=\"\"\n    visible={true}\n/>\n    )\n};\n\nexport default Loader;"],"names":["List","styled","Photo","Item","Name","Character","Popularity","Caption","movieId","useParams","useState","cast","setCast","status","setStatus","useEffect","getCreditsById","then","response","movieCast","map","character","name","popularity","profile_path","realId","nanoid","error","actor","src","alt","length","Loader","height","width","color","ariaLabel","radius","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible"],"sourceRoot":""}