{"version":3,"file":"static/js/52.cea87acb.chunk.js","mappings":"2LAEaA,E,OAAaC,GAAAA,OAAH,smB,SCEVC,EAAS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACjC,OACI,SAACL,EAAD,CACII,KAAMA,EACNC,QAASA,EAFb,SAIKF,GAGZ,C,8ICXYG,EAAQL,EAAAA,GAAAA,IAAH,2DAILM,EAAON,EAAAA,GAAAA,GAAH,0DAKJO,EAAOP,EAAAA,GAAAA,EAAH,yI,SCWjB,EAlBqB,SAAC,GAAyC,IAAtCQ,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,MAC7C,OACA,SAACL,EAAD,WACI,UAAC,KAAD,CAAMM,GAAE,iBAAYJ,GAAMG,MAAOA,EAAjC,WACI,SAACN,EAAD,CAAOQ,IAAKH,EAAaI,IAAI,iBAC7B,SAACP,EAAD,UAAOE,QAIlB,E,kBCXYM,EAAOf,EAAAA,GAAAA,GAAH,2JAQJgB,EAAYhB,EAAAA,GAAAA,KAAH,4C,SCsCtB,EAxCa,WACb,OAA4BiB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACV,KAAMC,EAAAA,EAAAA,IAAUL,GAAYM,MAAM,SAAAC,GAC9B,IAAMC,EAAiBD,EAAKE,KAAI,YAA+B,IAA7BrB,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACzC,MAAO,CAACoB,QAAQC,EAAAA,EAAAA,MAAUvB,GAAAA,EAAIC,MAAAA,EAAOC,YAAY,uCAAD,OAAyCA,GAC5F,IAEDS,GAAU,SAAAa,GAAS,wBAAQA,IAAR,OAAsBJ,GAAtB,GAClB,GAGJ,CAFC,MAAOK,GACLC,QAAQC,IAAIF,EACf,CACA,GAAE,CAACb,IAOJ,OACI,UAACJ,EAAD,YACI,4CACEE,EAAOkB,OAAS,IAClB,SAACrB,EAAD,UACKG,EAAOW,KAAI,gBAAEC,EAAF,EAAEA,OAAQtB,EAAV,EAAUA,GAAIC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,YAArB,OACR,SAAC,EAAD,CAA2BF,GAAIA,EAAIC,MAAOA,EAAOC,YAAaA,EAAaC,MAAO,CAAE0B,KAAMf,IAAvEQ,EADX,MAIdZ,EAAOkB,OAAS,IAClB,SAACnC,EAAA,EAAD,CAAQC,KAAM,YAAaC,KAAK,SAASC,QAdzB,WACpBiB,GAAc,SAAAiB,GAAU,OAAIA,EAAa,CAAjB,GAC3B,MAgBA,C","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/TrendingList/TrendingList.styled.js","components/TrendingList/TrendingList.jsx","components/pages/Home/Home.styled.js","components/pages/Home/Home.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ButtonLoad = styled.button`\npadding: 8px 16px;\nborder-radius: 2px;\nbackground-color: blue;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntext-align: center;\ndisplay: inline-block;\ncolor: #fff;\nborder: 0;\ntext-decoration: none;\ncursor: pointer;\nfont-family: inherit;\nfont-size: 18px;\nline-height: 24px;\nfont-style: normal;\nfont-weight: 500;\nmin-width: 100%;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    &:hover,\n    &:focus {\n    background-color: white;\n    color: black;\n    border: 1px solid grey;\n}\n    `","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonLoad } from './Button.styled';\n\nexport const Button = ({ text, type, onClick }) => {\n    return (\n        <ButtonLoad\n            type={type}\n            onClick={onClick}\n        >\n            {text}\n        </ButtonLoad>\n    )\n};\n\n\n\nButton.propTypes = {\n    text: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n};","import styled from \"styled-components\";\n\nexport const Photo = styled.img`\nmax-width: 180px;\nheight: 270px;\n`\nexport const Item = styled.li`\nmax-width: 200px;\nmargin: 10px;\n`\n\nexport const Name = styled.p`\nmax-width: 180px;\nmargin: 5px 0;\nfont-size: 16px;\ntext-decoration: none;\ncolor: black;\ntext-align: center;\n`\n\n","import { Link } from \"react-router-dom\";\nimport { Photo, Item, Name } from './TrendingList.styled';\nimport PropTypes from 'prop-types';\n\nconst TrendingList = ( { id, title, poster_path, state } ) => {\n    return (\n    <Item>\n        <Link to={`movies/${id}`} state={state}>\n            <Photo src={poster_path} alt=\"film poster\" />\n            <Name>{title}</Name>\n        </Link>\n    </Item>\n);\n}\n\nTrendingList.propTypes = {\n    state: PropTypes.object.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n};\n\nexport default TrendingList;","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: 10px;\n    padding: 0;\n    list-style: none;\n`\nexport const Container = styled.main`\n    padding: 20px;\n`","import { useState, useEffect } from 'react';\nimport { getTrends } from \"../../../service/moviesAPI\";\nimport TrendingList from \"../../TrendingList/TrendingList\";\nimport { Button } from \"../../Button/Button\";\nimport { nanoid } from 'nanoid'\nimport { List, Container } from './Home.styled';\nimport { useLocation } from \"react-router-dom\";\n\nconst Home = () => {\nconst [movies, setMovies] = useState([]);\nconst [pageNumber, setPageNumber] = useState(1);\n\nconst location = useLocation();\n    \nuseEffect(() => {\ntry { getTrends(pageNumber).then( resp => {\n    const moviesTrending = resp.map(({id, title, poster_path}) => {\n        return {realId: nanoid(), id, title, poster_path: `https://image.tmdb.org/t/p/original/${poster_path}`};\n    }\n    )\n    setMovies(prevState => [...prevState, ...moviesTrending]);\n    }) \n} catch (error) {\n    console.log(error);\n}\n}, [pageNumber]);\n\n\nconst handleIncrement = () => {\n    setPageNumber(PrevNumber => PrevNumber + 1);\n}\n\nreturn (\n    <Container>\n        <h1>Trending today:</h1>\n        {(movies.length > 0) &&\n        <List>\n            {movies.map(({realId, id, title, poster_path}) => (\n                <TrendingList key={realId} id={id} title={title} poster_path={poster_path} state={{ from: location }}/>\n            ))}\n        </List>}\n        {(movies.length > 0) &&\n        <Button text={\"Load more\"} type=\"button\" onClick={handleIncrement} />}\n\n    </Container>\n);\n};\n\nexport default Home;"],"names":["ButtonLoad","styled","Button","text","type","onClick","Photo","Item","Name","id","title","poster_path","state","to","src","alt","List","Container","useState","movies","setMovies","pageNumber","setPageNumber","location","useLocation","useEffect","getTrends","then","resp","moviesTrending","map","realId","nanoid","prevState","error","console","log","length","from","PrevNumber"],"sourceRoot":""}