{"version":3,"file":"static/js/779.5ccfe7bc.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","service/moviesAPI.js"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n    <Grid\n    height=\"80\"\n    width=\"80\"\n    color=\"#4fa94d\"\n    ariaLabel=\"grid-loading\"\n    radius=\"12.5\"\n    wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }}\n    wrapperClass=\"\"\n    visible={true}\n/>\n    )\n};\n\nexport default Loader;","import styled from \"styled-components\";\n\nexport const Photo = styled.img`\nmargin-top: 20px;\nmargin-right: 5px;\nwidth: 50px;\nheight: 50px;\nborder-radius: 50%;\n`\nexport const Name = styled.p`\ndisplay: block;\nwidth: 150px;\nmargin-right: 5px;\ntext-align: center;\noverflow: auto;\n`\nexport const Text = styled.p`\ndisplay: block;\nmargin-right: 5px;\nmax-width: 800px;\n`\n\nexport const Item = styled.li`\ndisplay: flex;\nalign-items: flex-start;\nmargin: 10px;\npadding: 0;\nlist-style: none;\n`\n\nexport const User = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nalign-items: flex-start;\njustify-content: center;\nwidth: 150px;\n`","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport { getReviewById } from \"../../service/moviesAPI\";\nimport { Photo, Item, User, Name, Text } from './Reviews.styled';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [review, setReview] = useState([]);\n    const [status, setStatus] = useState(\"\");\n\nuseEffect(() => {\n    setStatus(\"LOADING\");\n    try {  getReviewById(movieId).then(response => {\n        const movieReview = response.map(({author_details, content, created_at, state}) => {\n            if (author_details.avatar_path === null || (author_details.avatar_path).includes(\"/https\")) {\n                    author_details.avatar_path = \"https://upload.wikimedia.org/wikipedia/commons/1/12/User_icon_2.svg\";\n                    return {author_details, content, created_at};\n                } \n            else {\n                author_details.avatar_path = `https://image.tmdb.org/t/p/original/${author_details.avatar_path}`;\n                return {author_details, content, created_at};\n            }\n        }\n        )\n        setReview([...movieReview]);\n        setStatus(\"OK\");\n        }) \n    } catch (error) {\n        setStatus(\"ERROR\");\n    }\n}, [movieId]);\n\nreturn (\n<>\n    <h2>Review</h2>\n    <ul>\n        {review.map((review) => (\n        <Item key={review.created_at}>\n            <User>\n                <Photo src={review.author_details.avatar_path} alt=\"user\"/>\n                <Name>{review.author_details.username}</Name>\n            </User>\n            <Text>{review.content} <span>Create at: {(new Date(review.created_at)).toDateString()}</span></Text>\n        </Item>\n        ))}\n    </ul>\n    {(review.length === 0) &&\n    <p>There are no reviews.</p>}\n    {status === \"LOADING\" &&  <Loader />}\n</>\n);\n};\n\nReviews.propTypes = {\n    state: PropTypes.object,\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '48201fa6f91a1e64f8af04954a183bb3';\n\naxios.defaults.baseURL = URL;\n\nexport const getTrends = async (pageNumber) => {\nconst response = await axios(`trending/movie/day`, {\nparams: {\n    page: pageNumber,\n    api_key: KEY,\n},\n});\n\nreturn response.data.results;\n};\n\nexport const getMovieById = async (movieId) => {\nconst response = await axios(`movie/${movieId}`, {\nparams: {\n    query: movieId,\n    api_key: KEY,\n},\n});\n\nreturn response.data;\n};\n\nexport const getMovieByKeyword = async (keyword, pageNumber) => {\n    const response = await axios(`search/movie`, {\n    params: {\n        query: keyword,\n        page: pageNumber,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data;\n    };\n\nexport const getCreditsById = async (movieId) => {\n    const response = await axios(`movie/${movieId}/credits`, {\n    params: {\n        query: movieId,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data.cast;\n    };\n\nexport const getReviewById = async (movieId) => {\n    const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n        query: movieId,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data.results;\n    };"],"names":["height","width","color","ariaLabel","radius","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","Photo","styled","Name","Text","Item","User","movieId","useParams","useState","review","setReview","status","setStatus","useEffect","getReviewById","then","response","movieReview","map","author_details","content","created_at","state","avatar_path","includes","error","src","alt","username","Date","toDateString","length","Loader","KEY","axios","getTrends","pageNumber","params","page","api_key","data","results","getMovieById","query","getMovieByKeyword","keyword","getCreditsById","cast"],"sourceRoot":""}