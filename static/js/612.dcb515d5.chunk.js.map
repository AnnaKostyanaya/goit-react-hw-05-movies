{"version":3,"file":"static/js/612.dcb515d5.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/pages/Movies/Movies.styled.js","components/pages/Movies/Movies.jsx","service/moviesAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ButtonLoad = styled.button`\npadding: 8px 16px;\nborder-radius: 2px;\nbackground-color: blue;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntext-align: center;\ndisplay: inline-block;\ncolor: #fff;\nborder: 0;\ntext-decoration: none;\ncursor: pointer;\nfont-family: inherit;\nfont-size: 18px;\nline-height: 24px;\nfont-style: normal;\nfont-weight: 500;\nmin-width: 100%;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    &:hover,\n    &:focus {\n    background-color: blue;\n    color: white;\n    border: 2px solid blue;\n}\n    `","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonLoad } from './Button.styled';\n\nexport const Button = ({ text, type, onClick }) => {\n    return (\n        <ButtonLoad\n            type={type}\n            onClick={onClick}\n        >\n            {text}\n        </ButtonLoad>\n    )\n};\n\n\n\nButton.propTypes = {\n    text: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n};","import { Grid } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n    <Grid\n    height=\"80\"\n    width=\"80\"\n    color=\"#4fa94d\"\n    ariaLabel=\"grid-loading\"\n    radius=\"12.5\"\n    wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }}\n    wrapperClass=\"\"\n    visible={true}\n/>\n    )\n};\n\nexport default Loader;","import styled from \"styled-components\";\n\nexport const Searchcomponent = styled.header`\n    top: 0;\n    left: 0;\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    color: #fff;\n    background-color: blue;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    `\n\nexport const SearchForm = styled.form`\ndisplay: flex;\nalign-items: center;\nwidth: 100%;\nmax-width: 600px;\nbackground-color: #fff;\nborder-radius: 3px;\noverflow: hidden;\n`\n\nexport const SearchFormButton = styled.button`\ndisplay: inline-block;\nwidth: 48px;\nheight: 48px;\nborder: 0;\nopacity: 0.6;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;    \n`\n\nexport const SearchFormButtonLabel = styled.span`\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nclip-path: inset(50%);\nborder: 0;\n`\nexport const SearchFormInput = styled.input`\ndisplay: inline-block;\nwidth: 100%;\nfont: inherit;\nfont-size: 20px;\nborder: none;\noutline: none;\npadding-left: 4px;\npadding-right: 4px;\n::placeholder {\n    font: inherit;\n    font-size: 18px;\n}\n`\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: 10px;\n    padding: 0;\n    list-style: none;\n`\n\nexport const Photo = styled.img`\nmax-width: 180px;\nheight: 270px;\n`\nexport const Item = styled.li`\nmax-width: 200px;\nmargin: 10px;\n`\n\nexport const Name = styled.p`\nmax-width: 180px;\nmargin: 5px 0;\nfont-size: 16px;\ntext-decoration: none;\ncolor: black;\ntext-align: center;\n`\n\nexport const Error = styled.p`\ndisplay: block;\nwidth: 100%;\ntext-align: center;\n`","import { Link, useLocation } from \"react-router-dom\";\nimport {useSearchParams} from \"react-router-dom\";\nimport { useState, useEffect} from \"react\";\nimport { Searchcomponent, SearchForm, SearchFormButtonLabel, SearchFormButton, SearchFormInput, List, Photo, Name, Item, Error } from './Movies.styled';\nimport { FaSearch } from 'react-icons/fa';\nimport { Button } from \"../../Button/Button\";\nimport Loader from \"../../Loader/Loader\";\nimport { getMovieByKeyword } from \"../../../service/moviesAPI\";\nimport { nanoid } from 'nanoid';\n\nconst Movies = () => {\n\nconst location = useLocation();\nconst [movies, setMovies] = useState([]);\nconst [status, setStatus] = useState(\"\");\nconst [searchParams, setSearchParams] = useSearchParams();\nconst search = searchParams.get(\"search\");\nconst [pageNumber, setPageNumber] = useState(1);\nconst [pageTotal, setPageTotal] = useState(1);\nconst [searchWord, setSearchWord] = useState(\"\");\n\nuseEffect(() => {\nif (search === \"\") {\nreturn;\n} else {\nconst movie = getMovieByKeyword(search, pageNumber);\ntry { movie.then( resp => { \n    setPageTotal(resp.total_results);\n    const newMovie = resp.results.map(({id, title, poster_path}) => {\n    if (poster_path === null) {\n    return {realId: nanoid(), id, title, poster_path: `https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg`};\n    } else {  \n    return {realId: nanoid(), id, title, poster_path: `https://image.tmdb.org/t/p/original/${poster_path}`};\n    }\n    }\n    )\n    setMovies(prevState => [...prevState, ...newMovie]);\n    setStatus(\"OK\");\n    }) \n} catch (error) {\n    setStatus(\"ERROR\");\n} \n}\n}, [search, pageNumber]);\n\n\nconst handleIncrement = () => {\n    setPageNumber(PrevNumber => PrevNumber + 1);\n}\n\nconst lastPageDef = () => {\n    let lastPage = Number(pageTotal % 12);\n    if (lastPage === 0) {\n        return lastPage = Number(pageTotal / 12);\n    } else {\n        return lastPage = Number.parseInt(pageTotal / 12) + 1;\n    }\n}  \n\nconst handleSubmit = event => {\n    event.preventDefault();\n    if (searchWord.trim() === '') {\n        alert('Enter a search word.');\n        return;\n    }\n    if (searchWord !== search) {\n        setMovies([]);\n        setSearchParams({ search: searchWord })\n        setStatus(\"LOADING\");\n        setSearchWord(\"\");\n        } \n};\n\n\nreturn (\n<>\n    <Searchcomponent>\n        <SearchForm className=\"form\" onSubmit={handleSubmit}>\n            <SearchFormInput\n                className=\"input\"\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n                name=\"searchWord\"\n                value={searchWord}\n                onChange={event => setSearchWord(event.target.value.toLowerCase())}\n            />\n            <SearchFormButton type=\"submit\" className=\"button\">\n                <SearchFormButtonLabel className=\"button-label\">Search</SearchFormButtonLabel>\n                <FaSearch width=\"48\" height=\"48\" />\n            </SearchFormButton>\n        </SearchForm>\n    </Searchcomponent>\n    <List>\n        {movies.map(({realId, id, title, poster_path}) => (\n            <Item key={realId}>\n                <Link to={`${id}`} state={{ from: location }}>\n                    <Photo src={poster_path} alt=\"film poster\" />\n                    <Name>{title}</Name>\n                </Link>\n            </Item>\n        ))}\n    </List>\n    {((movies.length > 0) && (pageNumber < lastPageDef())) &&\n        <Button text={\"Load more\"} type=\"button\" onClick={handleIncrement} />}\n    {(pageNumber === lastPageDef() && movies.length > 0) &&\n        <Error>You've reached the end of search results.</Error>}\n    {status === \"LOADING\" &&  <Loader />}\n</>\n);\n}\n\nexport default Movies;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '48201fa6f91a1e64f8af04954a183bb3';\n\naxios.defaults.baseURL = URL;\n\nexport const getTrends = async (pageNumber) => {\nconst response = await axios(`trending/movie/day`, {\nparams: {\n    page: pageNumber,\n    api_key: KEY,\n},\n});\n\nreturn response.data.results;\n};\n\nexport const getMovieById = async (movieId) => {\nconst response = await axios(`movie/${movieId}`, {\nparams: {\n    query: movieId,\n    api_key: KEY,\n},\n});\n\nreturn response.data;\n};\n\nexport const getMovieByKeyword = async (keyword, pageNumber) => {\n    const response = await axios(`search/movie`, {\n    params: {\n        query: keyword,\n        page: pageNumber,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data;\n    };\n\nexport const getCreditsById = async (movieId) => {\n    const response = await axios(`movie/${movieId}/credits`, {\n    params: {\n        query: movieId,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data.cast;\n    };\n\nexport const getReviewById = async (movieId) => {\n    const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n        query: movieId,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data.results;\n    };"],"names":["ButtonLoad","styled","Button","text","type","onClick","height","width","color","ariaLabel","radius","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","Searchcomponent","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","List","Photo","Item","Name","Error","location","useLocation","useState","movies","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","search","get","pageNumber","setPageNumber","pageTotal","setPageTotal","searchWord","setSearchWord","useEffect","movie","getMovieByKeyword","then","resp","total_results","newMovie","results","map","id","title","poster_path","realId","nanoid","prevState","error","lastPageDef","lastPage","Number","parseInt","className","onSubmit","event","preventDefault","trim","alert","autoComplete","autoFocus","placeholder","name","value","onChange","target","toLowerCase","to","state","from","src","alt","length","PrevNumber","Loader","KEY","axios","getTrends","params","page","api_key","response","data","getMovieById","movieId","query","keyword","getCreditsById","cast","getReviewById"],"sourceRoot":""}