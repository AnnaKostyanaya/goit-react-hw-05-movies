{"version":3,"file":"static/js/375.b52126db.chunk.js","mappings":"yQAGaA,EAASC,EAAAA,GAAAA,IAAH,qCAGNC,EAAOD,EAAAA,GAAAA,KAAH,2CAGJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,2HAORI,EAAYJ,EAAAA,GAAAA,IAAH,8EAKTK,EAAOL,EAAAA,GAAAA,GAAH,+DAIJM,EAAON,EAAAA,GAAAA,GAAH,8D,SCuCjB,EAzDqB,WAAO,IAAD,IACvB,GAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAOS,EAAP,KAAeC,EAAf,KACA,GAA0BV,EAAAA,EAAAA,UAAS,IAAnC,eAAOW,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAoBjD,OAlBAC,EAAAA,EAAAA,YAAU,WACV,KAAMC,EAAAA,EAAAA,IAAaP,GAASQ,MAAK,SAAAC,GAC7BpB,EAASoB,EAASrB,OAClBG,EAAQkB,EAASC,cACjBjB,EAAYgB,EAASjB,UACQ,OAAzBiB,EAASE,YACThB,EAAU,8EAEVA,EAAU,uCAAD,OAAwCc,EAASE,cAE9Dd,EAAUY,EAASb,QACnBG,EAASU,EAASG,aACjB,GAGA,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACJ,GAAE,CAACb,KAGJ,UAAChB,EAAD,YACI,SAACF,EAAD,CAAUkC,GAAId,EAAd,6BACA,wBAAKd,KACL,0BAAG,SAACP,EAAD,oBAAH,IAAuBS,MACvB,0BAAG,SAACT,EAAD,0BAAH,IAA6BiB,MAC7B,0BAAG,SAACjB,EAAD,wBAAH,IAA2BW,MAC3B,SAACb,EAAD,CAAQsC,IAAKvB,EAAQwB,IAAI,YACzB,0BAAG,SAACrC,EAAD,sBAAH,IAAyBe,EAAOuB,KAAI,SAAAC,GAChC,OAAOA,EAAMC,IAChB,IAAEC,KAAK,UAER,UAACrC,EAAD,YACI,SAACC,EAAD,WACI,SAAC,KAAD,CAAM8B,GAAG,OAAT,kCAEJ,SAAC9B,EAAD,WACI,SAAC,KAAD,CAAM8B,GAAG,UAAT,2CAGR,SAAC,EAAAO,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIP,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Poster = styled.img`\nwidth: 50%;\n`\nexport const Text = styled.span`\nfont-weight: 700;\n`\nexport const Backward = styled(Link)`\npadding: 16px 0px;\nborder-radius: 4px;\ntext-decoration: none;\nfont-weight: 500;\ncolor: blue; \n`\nexport const Container = styled.div`\nmax-width: 960px;\nmargin: 0 auto;\npadding: 0 16px;\n`\nexport const List = styled.ul`\nlist-style: none;\npadding: 16px 0px;\n`\nexport const Item = styled.li`\ntext-decoration: none;\ncolor: blue;\n`","import { useParams, Link, Outlet } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Suspense } from \"react\";\nimport { getMovieById } from \"../../service/moviesAPI\";\nimport { Poster, Text, Backward, Container, List, Item } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n    const [title, setTitle] = useState('');\n    const [date, setDate] = useState('');\n    const [overview, setOverview] = useState('');\n    const [poster, setPoster] = useState('');\n    const [genres, setGenres] = useState([]);\n    const [score, setScore] = useState('');\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n\nuseEffect(() => {\ntry { getMovieById(movieId).then(response => {\n    setTitle(response.title)\n    setDate(response.release_date)\n    setOverview(response.overview)\n    if (response.poster_path === null) {\n        setPoster(`https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg`)\n    } else {\n        setPoster(`https://image.tmdb.org/t/p/original/${response.poster_path}`)\n    }\n    setGenres(response.genres)\n    setScore(response.vote_average)\n    }) \n    } catch (error) {\n        console.log(error);\n    }\n}, [movieId]);\n\nreturn (\n<Container>\n    <Backward to={backLinkHref}>Back to movies</Backward>\n    <h2>{title}</h2>\n    <p><Text>Date:</Text> {date}</p>  \n    <p><Text>User Score:</Text> {score}</p>\n    <p><Text>Overview:</Text> {overview}</p>     \n    <Poster src={poster} alt=\"poster\"/>\n    <p><Text>Genres:</Text> {genres.map(genre => {\n        return genre.name;\n    }).join(\", \")}</p> \n\n    <List>\n        <Item>\n            <Link to=\"cast\">Read about a cast</Link>\n        </Item>\n        <Item>\n            <Link to=\"reviews\">Get to know the reviews</Link>\n        </Item>\n    </List>\n    <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n    </Suspense>\n</Container>\n);\n};\n\n\nexport default MovieDetails;"],"names":["Poster","styled","Text","Backward","Link","Container","List","Item","useState","title","setTitle","date","setDate","overview","setOverview","poster","setPoster","genres","setGenres","score","setScore","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","getMovieById","then","response","release_date","poster_path","vote_average","error","console","log","to","src","alt","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}