{"version":3,"file":"static/js/52.be0004b4.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/TrendingList/TrendingList.styled.js","components/TrendingList/TrendingList.jsx","components/pages/Home/Home.styled.js","components/pages/Home/Home.jsx","service/moviesAPI.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ButtonLoad = styled.button`\npadding: 8px 16px;\nborder-radius: 2px;\nbackground-color: blue;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntext-align: center;\ndisplay: inline-block;\ncolor: #fff;\nborder: 0;\ntext-decoration: none;\ncursor: pointer;\nfont-family: inherit;\nfont-size: 18px;\nline-height: 24px;\nfont-style: normal;\nfont-weight: 500;\nmin-width: 100%;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    &:hover,\n    &:focus {\n    background-color: blue;\n    color: white;\n    border: 2px solid blue;\n}\n    `","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonLoad } from './Button.styled';\n\nexport const Button = ({ text, type, onClick }) => {\n    return (\n        <ButtonLoad\n            type={type}\n            onClick={onClick}\n        >\n            {text}\n        </ButtonLoad>\n    )\n};\n\n\n\nButton.propTypes = {\n    text: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n};","import { Grid } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n    <Grid\n    height=\"80\"\n    width=\"80\"\n    color=\"#4fa94d\"\n    ariaLabel=\"grid-loading\"\n    radius=\"12.5\"\n    wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }}\n    wrapperClass=\"\"\n    visible={true}\n/>\n    )\n};\n\nexport default Loader;","import styled from \"styled-components\";\n\nexport const Photo = styled.img`\nmax-width: 180px;\nheight: 270px;\n`\nexport const Item = styled.li`\nmax-width: 200px;\nmargin: 10px;\n`\n\nexport const Name = styled.p`\nmax-width: 180px;\nmargin: 5px 0;\nfont-size: 16px;\ntext-decoration: none;\ncolor: black;\ntext-align: center;\n`\n\n","import { Link } from \"react-router-dom\";\nimport { Photo, Item, Name } from './TrendingList.styled';\nimport PropTypes from 'prop-types';\n\nconst TrendingList = ( { id, title, poster_path, state } ) => {\n    return (\n    <Item>\n        <Link to={`movies/${id}`} state={state}>\n            <Photo src={poster_path} alt=\"film poster\" />\n            <Name>{title}</Name>\n        </Link>\n    </Item>\n);\n}\n\nTrendingList.propTypes = {\n    state: PropTypes.object,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n};\n\nexport default TrendingList;","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: 10px;\n    padding: 0;\n    list-style: none;\n`\nexport const Container = styled.main`\n    padding: 20px;\n`","import { useState, useEffect } from 'react';\nimport { getTrends } from \"../../../service/moviesAPI\";\nimport TrendingList from \"../../TrendingList/TrendingList\";\nimport { Button } from \"../../Button/Button\";\nimport Loader from \"../../Loader/Loader\";\nimport { nanoid } from 'nanoid'\nimport { List, Container } from './Home.styled';\nimport { useLocation } from \"react-router-dom\";\n\nconst Home = () => {\nconst [movies, setMovies] = useState([]);\nconst [status, setStatus] = useState(\"\");\nconst [pageNumber, setPageNumber] = useState(1);\n\nconst location = useLocation();\n    \nuseEffect(() => {\n    setStatus(\"LOADING\");\n    try { \n        getTrends(pageNumber).then( resp => {\n            const moviesTrending = resp.map(({id, title, poster_path}) => {\n                return {realId: nanoid(), id, title, poster_path: `https://image.tmdb.org/t/p/original/${poster_path}`};\n            })\n            setMovies(prevState => [...prevState, ...moviesTrending]);\n            setStatus(\"OK\");\n        }) \n    } catch (error) {\n        setStatus(\"ERROR\");\n    }\n}, [pageNumber]);\n\n\nconst handleIncrement = () => {\n    setPageNumber(PrevNumber => PrevNumber + 1);\n}\n\nreturn (\n    <Container>\n        <h1>Trending today:</h1>\n        {(movies.length > 0) &&\n        <List>\n            {movies.map(({realId, id, title, poster_path}) => (\n                <TrendingList key={realId} id={id} title={title} poster_path={poster_path} state={{ from: location }}/>\n            ))}\n        </List>}\n        {(movies.length > 0) &&\n        <Button text={\"Load more\"} type=\"button\" onClick={handleIncrement} />}\n        {status === \"LOADING\" &&  <Loader />}\n    </Container>\n);\n};\n\nexport default Home;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '48201fa6f91a1e64f8af04954a183bb3';\n\naxios.defaults.baseURL = URL;\n\nexport const getTrends = async (pageNumber) => {\nconst response = await axios(`trending/movie/day`, {\nparams: {\n    page: pageNumber,\n    api_key: KEY,\n},\n});\n\nreturn response.data.results;\n};\n\nexport const getMovieById = async (movieId) => {\nconst response = await axios(`movie/${movieId}`, {\nparams: {\n    query: movieId,\n    api_key: KEY,\n},\n});\n\nreturn response.data;\n};\n\nexport const getMovieByKeyword = async (keyword, pageNumber) => {\n    const response = await axios(`search/movie`, {\n    params: {\n        query: keyword,\n        page: pageNumber,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data;\n    };\n\nexport const getCreditsById = async (movieId) => {\n    const response = await axios(`movie/${movieId}/credits`, {\n    params: {\n        query: movieId,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data.cast;\n    };\n\nexport const getReviewById = async (movieId) => {\n    const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n        query: movieId,\n        api_key: KEY,\n    },\n    });\n    \n    return response.data.results;\n    };","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ButtonLoad","styled","Button","text","type","onClick","height","width","color","ariaLabel","radius","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","Photo","Item","Name","id","title","poster_path","state","to","src","alt","List","Container","useState","movies","setMovies","status","setStatus","pageNumber","setPageNumber","location","useLocation","useEffect","getTrends","then","resp","moviesTrending","map","realId","nanoid","prevState","error","length","from","PrevNumber","Loader","KEY","axios","params","page","api_key","response","data","results","getMovieById","movieId","query","getMovieByKeyword","keyword","getCreditsById","cast","getReviewById","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}